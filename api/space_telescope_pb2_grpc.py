# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api import space_telescope_pb2 as api_dot_space__telescope__pb2


class ImageStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetImageInformation = channel.unary_unary(
        '/Image/GetImageInformation',
        request_serializer=api_dot_space__telescope__pb2.ImageRequest.SerializeToString,
        response_deserializer=api_dot_space__telescope__pb2.ImageReply.FromString,
        )


class ImageServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetImageInformation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetImageInformation': grpc.unary_unary_rpc_method_handler(
          servicer.GetImageInformation,
          request_deserializer=api_dot_space__telescope__pb2.ImageRequest.FromString,
          response_serializer=api_dot_space__telescope__pb2.ImageReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Image', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
